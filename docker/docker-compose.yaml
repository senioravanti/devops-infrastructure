name: devops-infrastructure

volumes:
  devops-infrastructure-portainer-data:
  devops-infrastructure-s3-data:
  devops-infrastructure-mongodb-data:
  devops-infrastructure-redis-data:

services:
  portainer:
    image: 'portainer/portainer-ce:lts'
    container_name: devops-infrastructure-portainer

    restart: unless-stopped

    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock'
      - 'devops-infrastructure-portainer-data:/data'
      - "${SSL_LETSENCRYPT_PATH}:/certs:ro"

    command: >
      --sslcert /certs/fullchain.pem
      --sslkey /certs/privkey.pem

    ports:
      - '8000:8000'
      - '9443:9443'

  minio:
    image: 'bitnami/minio:2025'
    container_name: 'devops-infrastructure-s3'

    restart: 'on-failure:3'

    healthcheck:
      test: [ "CMD", 
        "curl", "-sSi",
        "http://127.0.0.1:9000/minio/health/live"
      ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s

    env_file:
      - './environment/.env.minio'

    environment:
      MINIO_BROWSER: on

    volumes:
      - 'devops-infrastructure-s3-data:/bitnami/minio/data'

  webserver:
    image: 'nginx:1.29.0-alpine3.22'
    container_name: 'devops-infrastructure-webserver'

    restart: unless-stopped

    depends_on:
      minio:
        condition: service_healthy

    volumes:
      - './nginx/config/nginx.conf:/etc/nginx/nginx.conf:ro'
      - "${SSL_LETSENCRYPT_PATH}:/etc/ssl/nginx:ro"

    ports:
      - '9090:9090'
      - '9091:9091'

  mongodb:
    image: "mongo:${MONGODB_VERSION}-noble"
    container_name: 'devops-infrastructure-mongodb'

    restart: 'on-failure:3'
    
    healthcheck:
      test: [ "CMD-SHELL", 
        "mongosh", "mongodb://$${MONGO_INITDB_ROOT_USERNAME}:$${MONGO_INITDB_ROOT_PASSWORD}@senioravanti.ru:27017/",
        "--eval", "db.runCommand(\"ping\").ok", "--quiet"
      ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 5s

    volumes:
      - 'devops-infrastructure-mongodb-data:/data/db'
      - './mongodb/scripts/docker-mongodb-entrypoint.sh:/usr/local/bin/docker-mongodb-entrypoint.sh'
      - "${SSL_PRIVATE_PATH}/mongodb:/etc/ssl/mongodb:ro"

    env_file:
      - './environment/.env.mongodb'

    command: 'docker-mongodb-entrypoint.sh'

    ports:
      - '27017:27017'

  redis:
    image: "redis:${REDIS_VERSION}-alpine3.22"
    container_name: 'devops-infrastructure-redis'

    restart: 'on-failure:3'

    env_file:
      - './environment/.env.redis'

    volumes:
      - 'devops-infrastructure-redis-data:/data'
      - './redis/scripts/docker-redis-entrypoint.sh:/usr/local/bin/docker-redis-entrypoint.sh'
      - "${SSL_PRIVATE_PATH}/redis:/etc/ssl/redis:ro"
      - "${SSL_LETSENCRYPT_CA_PATH}:/etc/ssl/certs/isrgrootx1.pem:ro"

    command: 'docker-redis-entrypoint.sh'

    ports:
      - '6379:6379'
